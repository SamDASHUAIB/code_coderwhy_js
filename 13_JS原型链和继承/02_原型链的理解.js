var obj = {
  name: 'why',
  age: 18,
}

// [[get]]操作
// 1.在当前的对象中查找属性
// 2.如果没有找到, 这个时候会去原型链(__proto__)对象上查找，隐式原型

obj.__proto__ = {}

// 原型链
obj.__proto__.__proto__ = {}

obj.__proto__.__proto__.__proto__ = {
  address: '上海市',
}

console.log(obj.address)

/*
  封装：属性和方法封装到一个类中
  继承：减少代码冗余，重复利用一些代码 => 重复的代码和逻辑抽取到父类中, 子类只需要直接继承过来使用即可
  多态
*/
/*
  原型：查找属性的规则 => 沿着原型链
  继承：减少代码冗余，重复利用一些代码 =》 重复的代码和逻辑抽取到父类中， 子类只需要直接继承过来（沿着原型链访问之）使用即可
  重复的代码和逻辑抽取到父类中，子类只需要能够通过某种方式访问这些代码逻辑，使用之，某种方式就是原型链。
*/
